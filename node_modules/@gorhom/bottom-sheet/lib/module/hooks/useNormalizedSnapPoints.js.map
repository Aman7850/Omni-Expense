{"version":3,"sources":["useNormalizedSnapPoints.ts"],"names":["useMemo","normalizeSnapPoints","useNormalizedSnapPoints","snapPoints","containerHeight","handleHeight","normalizedSnapPoints","map","normalizedSnapPoint","Math","max"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,mBAAT,QAAoC,cAApC;AAEA,OAAO,MAAMC,uBAAuB,GAAG,CACrCC,UADqC,EAErCC,eAAuB,GAAG,CAFW,EAGrCC,YAAoB,GAAG,CAHc,KAKrCL,OAAO,CAAC,MAAM;AACZ,QAAMM,oBAAoB,GAAGL,mBAAmB,CAC9CE,UAD8C,EAE9CC,eAF8C,CAAhD;AAIA,SAAOE,oBAAoB,CAACC,GAArB,CAAyBC,mBAAmB,IAAI;AACrD;;;;AAIA,QAAIA,mBAAmB,KAAK,CAAxB,IAA6BH,YAAY,KAAK,CAAlD,EAAqD;AACnDG,MAAAA,mBAAmB,GAAGA,mBAAmB,GAAGH,YAA5C;AACD;;AACD,WAAOI,IAAI,CAACC,GAAL,CAASN,eAAe,GAAGI,mBAAlB,GAAwCH,YAAjD,EAA+D,CAA/D,CAAP;AACD,GATM,CAAP;AAUD,CAfM,EAeJ,CAACF,UAAD,EAAaC,eAAb,EAA8BC,YAA9B,CAfI,CALF","sourcesContent":["import { useMemo } from 'react';\nimport { normalizeSnapPoints } from '../utilities';\n\nexport const useNormalizedSnapPoints = (\n  snapPoints: ReadonlyArray<number | string>,\n  containerHeight: number = 0,\n  handleHeight: number = 0\n) =>\n  useMemo(() => {\n    const normalizedSnapPoints = normalizeSnapPoints(\n      snapPoints,\n      containerHeight\n    );\n    return normalizedSnapPoints.map(normalizedSnapPoint => {\n      /**\n       * we subset handleHeight from the `normalizedSnapPoint` to make\n       * sure that sheets and its handle will be out of the screen.\n       */\n      if (normalizedSnapPoint === 0 && handleHeight !== 0) {\n        normalizedSnapPoint = normalizedSnapPoint - handleHeight;\n      }\n      return Math.max(containerHeight - normalizedSnapPoint - handleHeight, 0);\n    });\n  }, [snapPoints, containerHeight, handleHeight]);\n"]}