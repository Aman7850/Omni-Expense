{"version":3,"sources":["usePressBehavior.ts"],"names":["useCallback","useEffect","useMemo","useBottomSheet","DEFAULT_PRESS_BEHAVIOR","usePressBehavior","closeOnPress","disappearsOnIndex","pressBehavior","snapTo","close","syntheticPressBehavior","handleOnPress","__DEV__","console","warn"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,OAAjC,QAAgD,OAAhD;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,sBAAT,QAAuC,aAAvC;AAMA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAC/BC,EAAAA,YAD+B;AAE/BC,EAAAA,iBAF+B;AAG/BC,EAAAA;AAH+B,CAAD,KAO1B;AACJ;AACA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBP,cAAc,EAAxC,CAFI,CAGJ;AAEA;;AACA,QAAMQ,sBAAsB,GAAGT,OAAO,CAAwB,MAAM;AAClE,QAAI,OAAOI,YAAP,KAAwB,SAA5B,EAAuC;AACrC,aAAOA,YAAY,GAAG,OAAH,GAAa,MAAhC;AACD;;AACD,QAAIA,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvB,aAAO,OAAP;AACD;;AACD,QAAIA,YAAY,KAAKC,iBAArB,EAAwC;AACtC,aAAO,UAAP;AACD;;AACD,WAAOC,aAAP,aAAOA,aAAP,cAAOA,aAAP,GAAwBJ,sBAAxB;AACD,GAXqC,EAWnC,CAACI,aAAD,EAAgBF,YAAhB,EAA8BC,iBAA9B,CAXmC,CAAtC;AAYA,QAAMK,aAAa,GAAGZ,WAAW,CAAC,MAAM;AACtC,QAAIW,sBAAsB,KAAK,OAA/B,EAAwC;AACtCD,MAAAA,KAAK;AACN,KAFD,MAEO,IAAIC,sBAAsB,KAAK,UAA/B,EAA2C;AAChDF,MAAAA,MAAM,CAACF,iBAAD,CAAN;AACD,KAFM,MAEA,IAAI,OAAOI,sBAAP,KAAkC,QAAtC,EAAgD;AACrDF,MAAAA,MAAM,CAACE,sBAAD,CAAN;AACD;AACF,GARgC,EAQ9B,CAACD,KAAD,EAAQH,iBAAR,EAA2BI,sBAA3B,EAAmDF,MAAnD,CAR8B,CAAjC,CAlBI,CA2BJ;AAEA;;AACAI,EAAAA,OAAO,IACL;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,YAAY,IAAI,IAAhB,IAAwBE,aAAa,IAAI,IAA7C,EAAmD;AACjDM,MAAAA,OAAO,CAACC,IAAR,CACE,sHADF;AAGD;AACF,GANQ,EAMN,CAACT,YAAD,EAAeE,aAAf,CANM,CAFX,CA9BI,CAuCJ;;AACA,SAAO;AACLI,IAAAA,aADK;AAELD,IAAAA;AAFK,GAAP;AAID,CAnDM","sourcesContent":["import { useCallback, useEffect, useMemo } from 'react';\nimport { useBottomSheet } from '../../hooks';\nimport { DEFAULT_PRESS_BEHAVIOR } from './constants';\nimport type {\n  BackdropPressBehavior,\n  BottomSheetDefaultBackdropProps,\n} from './types';\n\nexport const usePressBehavior = ({\n  closeOnPress,\n  disappearsOnIndex,\n  pressBehavior,\n}: Pick<\n  BottomSheetDefaultBackdropProps,\n  'closeOnPress' | 'disappearsOnIndex' | 'pressBehavior'\n>) => {\n  //#region hooks\n  const { snapTo, close } = useBottomSheet();\n  //#endregion\n\n  //#region variables\n  const syntheticPressBehavior = useMemo<BackdropPressBehavior>(() => {\n    if (typeof closeOnPress === 'boolean') {\n      return closeOnPress ? 'close' : 'none';\n    }\n    if (closeOnPress === -1) {\n      return 'close';\n    }\n    if (closeOnPress === disappearsOnIndex) {\n      return 'collapse';\n    }\n    return pressBehavior ?? DEFAULT_PRESS_BEHAVIOR;\n  }, [pressBehavior, closeOnPress, disappearsOnIndex]);\n  const handleOnPress = useCallback(() => {\n    if (syntheticPressBehavior === 'close') {\n      close();\n    } else if (syntheticPressBehavior === 'collapse') {\n      snapTo(disappearsOnIndex as number);\n    } else if (typeof syntheticPressBehavior === 'number') {\n      snapTo(syntheticPressBehavior);\n    }\n  }, [close, disappearsOnIndex, syntheticPressBehavior, snapTo]);\n  //#endregion\n\n  //#region effects\n  __DEV__ &&\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      if (closeOnPress != null && pressBehavior != null) {\n        console.warn(\n          'BottomSheetBackdrop: you should never define both closeOnPress and pressBehavior. closeOnPress will take precedence.'\n        );\n      }\n    }, [closeOnPress, pressBehavior]);\n  //#endregion\n  return {\n    handleOnPress,\n    syntheticPressBehavior,\n  };\n};\n"]}