{"version":3,"sources":["BottomSheetBackdrop.tsx"],"names":["React","memo","useMemo","useRef","TouchableWithoutFeedback","Animated","and","block","call","cond","eq","Extrapolate","neq","not","set","useCode","isEqual","useReactiveValue","DEFAULT_OPACITY","DEFAULT_APPEARS_ON_INDEX","DEFAULT_DISAPPEARS_ON_INDEX","DEFAULT_ENABLE_TOUCH_THROUGH","WINDOW_HEIGHT","usePressBehavior","styles","interpolate","interpolateV1","interpolateNode","interpolateV2","require","AnimatedTouchableWithoutFeedback","createAnimatedComponent","BottomSheetBackdropComponent","animatedIndex","opacity","appearsOnIndex","disappearsOnIndex","enableTouchThrough","pressBehavior","closeOnPress","style","handleOnPress","syntheticPressBehavior","containerRef","pointerEvents","isTouchable","animatedOpacity","inputRange","outputRange","extrapolate","CLAMP","buttonStyle","transform","translateY","containerStyle","container","current","setNativeProps","BottomSheetBackdrop"],"mappings":"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","sourcesContent":["import React, { memo, useMemo, useRef } from 'react';\nimport { TouchableWithoutFeedback } from 'react-native';\nimport Animated, {\n  and,\n  block,\n  call,\n  cond,\n  eq,\n  Extrapolate,\n  neq,\n  not,\n  set,\n  useCode,\n} from 'react-native-reanimated';\nimport isEqual from 'lodash.isequal';\nimport { useReactiveValue } from '../../hooks';\nimport {\n  DEFAULT_OPACITY,\n  DEFAULT_APPEARS_ON_INDEX,\n  DEFAULT_DISAPPEARS_ON_INDEX,\n  DEFAULT_ENABLE_TOUCH_THROUGH,\n} from './constants';\nimport { WINDOW_HEIGHT } from '../../constants';\nimport { usePressBehavior } from './usePressBehavior';\nimport { styles } from './styles';\nimport type { BottomSheetDefaultBackdropProps } from './types';\n\nconst {\n  interpolate: interpolateV1,\n  interpolateNode: interpolateV2,\n} = require('react-native-reanimated');\nconst interpolate = interpolateV2 || interpolateV1;\n\nconst AnimatedTouchableWithoutFeedback = Animated.createAnimatedComponent(\n  TouchableWithoutFeedback\n);\n\nconst BottomSheetBackdropComponent = ({\n  animatedIndex,\n  opacity = DEFAULT_OPACITY,\n  appearsOnIndex = DEFAULT_APPEARS_ON_INDEX,\n  disappearsOnIndex = DEFAULT_DISAPPEARS_ON_INDEX,\n  enableTouchThrough = DEFAULT_ENABLE_TOUCH_THROUGH,\n  pressBehavior,\n  closeOnPress,\n  style,\n}: BottomSheetDefaultBackdropProps) => {\n  //#region hooks\n  const { handleOnPress, syntheticPressBehavior } = usePressBehavior({\n    pressBehavior,\n    closeOnPress,\n    disappearsOnIndex,\n  });\n  //#endregion\n\n  //#region variables\n  const containerRef = useRef<Animated.View>(null);\n  const pointerEvents = useMemo(() => (enableTouchThrough ? 'none' : 'auto'), [\n    enableTouchThrough,\n  ]);\n  //#endregion\n\n  //#region animation variables\n  const isTouchable = useReactiveValue(\n    syntheticPressBehavior !== 'none' ? 1 : 0\n  );\n  const animatedOpacity = useMemo(\n    () =>\n      interpolate(animatedIndex, {\n        inputRange: [disappearsOnIndex, appearsOnIndex],\n        outputRange: [0, opacity],\n        extrapolate: Extrapolate.CLAMP,\n      }),\n    [animatedIndex, opacity, appearsOnIndex, disappearsOnIndex]\n  );\n  //#endregion\n\n  //#region styles\n  const buttonStyle = useMemo(\n    () => [\n      style,\n      {\n        transform: [\n          {\n            translateY: cond(\n              eq(animatedIndex, disappearsOnIndex),\n              WINDOW_HEIGHT,\n              0\n            ),\n          },\n        ],\n      },\n    ],\n    [disappearsOnIndex, style, animatedIndex]\n  );\n  const containerStyle = useMemo(\n    () => [\n      styles.container,\n      style,\n      {\n        opacity: animatedOpacity,\n      },\n    ],\n    [style, animatedOpacity]\n  );\n  //#endregion\n\n  //#region effects\n  useCode(\n    () =>\n      block([\n        cond(\n          and(eq(animatedIndex, disappearsOnIndex), isTouchable),\n          [\n            set(isTouchable, 0),\n            call([], () => {\n              // @ts-ignore\n              containerRef.current.setNativeProps({\n                pointerEvents: 'none',\n              });\n            }),\n          ],\n          cond(and(neq(animatedIndex, disappearsOnIndex), not(isTouchable)), [\n            set(isTouchable, 1),\n            call([], () => {\n              // @ts-ignore\n              containerRef.current.setNativeProps({\n                pointerEvents: 'auto',\n              });\n            }),\n          ])\n        ),\n      ]),\n    []\n  );\n  //#endregion\n\n  return syntheticPressBehavior !== 'none' ? (\n    <AnimatedTouchableWithoutFeedback\n      accessible={true}\n      accessibilityRole=\"button\"\n      accessibilityLabel=\"Bottom Sheet backdrop\"\n      accessibilityHint=\"Tap to close the Bottom Sheet\"\n      onPress={handleOnPress}\n      style={buttonStyle}\n    >\n      <Animated.View key=\"backdrop\" ref={containerRef} style={containerStyle} />\n    </AnimatedTouchableWithoutFeedback>\n  ) : (\n    <Animated.View\n      key=\"backdrop\"\n      ref={containerRef}\n      pointerEvents={pointerEvents}\n      style={containerStyle}\n    />\n  );\n};\n\nconst BottomSheetBackdrop = memo(BottomSheetBackdropComponent, isEqual);\n\nexport default BottomSheetBackdrop;\n"]}