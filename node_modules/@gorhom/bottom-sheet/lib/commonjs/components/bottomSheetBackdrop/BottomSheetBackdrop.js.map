{"version":3,"sources":["BottomSheetBackdrop.tsx"],"names":["interpolate","interpolateV1","interpolateNode","interpolateV2","require","AnimatedTouchableWithoutFeedback","Animated","createAnimatedComponent","TouchableWithoutFeedback","BottomSheetBackdropComponent","animatedIndex","opacity","DEFAULT_OPACITY","appearsOnIndex","DEFAULT_APPEARS_ON_INDEX","disappearsOnIndex","DEFAULT_DISAPPEARS_ON_INDEX","enableTouchThrough","DEFAULT_ENABLE_TOUCH_THROUGH","pressBehavior","closeOnPress","style","handleOnPress","syntheticPressBehavior","containerRef","pointerEvents","isTouchable","animatedOpacity","inputRange","outputRange","extrapolate","Extrapolate","CLAMP","buttonStyle","transform","translateY","WINDOW_HEIGHT","containerStyle","styles","container","current","setNativeProps","BottomSheetBackdrop","isEqual"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAYA;;AACA;;AACA;;AAMA;;AACA;;AACA;;;;;;;;AAGA,MAAM;AACJA,EAAAA,WAAW,EAAEC,aADT;AAEJC,EAAAA,eAAe,EAAEC;AAFb,IAGFC,OAAO,CAAC,yBAAD,CAHX;;AAIA,MAAMJ,WAAW,GAAGG,aAAa,IAAIF,aAArC;;AAEA,MAAMI,gCAAgC,GAAGC,+BAASC,uBAAT,CACvCC,qCADuC,CAAzC;;AAIA,MAAMC,4BAA4B,GAAG,CAAC;AACpCC,EAAAA,aADoC;AAEpCC,EAAAA,OAAO,GAAGC,0BAF0B;AAGpCC,EAAAA,cAAc,GAAGC,mCAHmB;AAIpCC,EAAAA,iBAAiB,GAAGC,sCAJgB;AAKpCC,EAAAA,kBAAkB,GAAGC,uCALe;AAMpCC,EAAAA,aANoC;AAOpCC,EAAAA,YAPoC;AAQpCC,EAAAA;AARoC,CAAD,KASE;AACrC;AACA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAA4C,wCAAiB;AACjEJ,IAAAA,aADiE;AAEjEC,IAAAA,YAFiE;AAGjEL,IAAAA;AAHiE,GAAjB,CAAlD,CAFqC,CAOrC;AAEA;;AACA,QAAMS,YAAY,GAAG,mBAAsB,IAAtB,CAArB;AACA,QAAMC,aAAa,GAAG,oBAAQ,MAAOR,kBAAkB,GAAG,MAAH,GAAY,MAA7C,EAAsD,CAC1EA,kBAD0E,CAAtD,CAAtB,CAXqC,CAcrC;AAEA;;AACA,QAAMS,WAAW,GAAG,6BAClBH,sBAAsB,KAAK,MAA3B,GAAoC,CAApC,GAAwC,CADtB,CAApB;AAGA,QAAMI,eAAe,GAAG,oBACtB,MACE3B,WAAW,CAACU,aAAD,EAAgB;AACzBkB,IAAAA,UAAU,EAAE,CAACb,iBAAD,EAAoBF,cAApB,CADa;AAEzBgB,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAIlB,OAAJ,CAFY;AAGzBmB,IAAAA,WAAW,EAAEC,mCAAYC;AAHA,GAAhB,CAFS,EAOtB,CAACtB,aAAD,EAAgBC,OAAhB,EAAyBE,cAAzB,EAAyCE,iBAAzC,CAPsB,CAAxB,CApBqC,CA6BrC;AAEA;;AACA,QAAMkB,WAAW,GAAG,oBAClB,MAAM,CACJZ,KADI,EAEJ;AACEa,IAAAA,SAAS,EAAE,CACT;AACEC,MAAAA,UAAU,EAAE,iCACV,+BAAGzB,aAAH,EAAkBK,iBAAlB,CADU,EAEVqB,yBAFU,EAGV,CAHU;AADd,KADS;AADb,GAFI,CADY,EAelB,CAACrB,iBAAD,EAAoBM,KAApB,EAA2BX,aAA3B,CAfkB,CAApB;AAiBA,QAAM2B,cAAc,GAAG,oBACrB,MAAM,CACJC,eAAOC,SADH,EAEJlB,KAFI,EAGJ;AACEV,IAAAA,OAAO,EAAEgB;AADX,GAHI,CADe,EAQrB,CAACN,KAAD,EAAQM,eAAR,CARqB,CAAvB,CAjDqC,CA2DrC;AAEA;;AACA,sCACE,MACE,kCAAM,CACJ,iCACE,gCAAI,+BAAGjB,aAAH,EAAkBK,iBAAlB,CAAJ,EAA0CW,WAA1C,CADF,EAEE,CACE,gCAAIA,WAAJ,EAAiB,CAAjB,CADF,EAEE,iCAAK,EAAL,EAAS,MAAM;AACb;AACAF,IAAAA,YAAY,CAACgB,OAAb,CAAqBC,cAArB,CAAoC;AAClChB,MAAAA,aAAa,EAAE;AADmB,KAApC;AAGD,GALD,CAFF,CAFF,EAWE,iCAAK,gCAAI,gCAAIf,aAAJ,EAAmBK,iBAAnB,CAAJ,EAA2C,gCAAIW,WAAJ,CAA3C,CAAL,EAAmE,CACjE,gCAAIA,WAAJ,EAAiB,CAAjB,CADiE,EAEjE,iCAAK,EAAL,EAAS,MAAM;AACb;AACAF,IAAAA,YAAY,CAACgB,OAAb,CAAqBC,cAArB,CAAoC;AAClChB,MAAAA,aAAa,EAAE;AADmB,KAApC;AAGD,GALD,CAFiE,CAAnE,CAXF,CADI,CAAN,CAFJ,EAyBE,EAzBF,EA9DqC,CAyFrC;;AAEA,SAAOF,sBAAsB,KAAK,MAA3B,gBACL,6BAAC,gCAAD;AACE,IAAA,UAAU,EAAE,IADd;AAEE,IAAA,iBAAiB,EAAC,QAFpB;AAGE,IAAA,kBAAkB,EAAC,uBAHrB;AAIE,IAAA,iBAAiB,EAAC,+BAJpB;AAKE,IAAA,OAAO,EAAED,aALX;AAME,IAAA,KAAK,EAAEW;AANT,kBAQE,6BAAC,8BAAD,CAAU,IAAV;AAAe,IAAA,GAAG,EAAC,UAAnB;AAA8B,IAAA,GAAG,EAAET,YAAnC;AAAiD,IAAA,KAAK,EAAEa;AAAxD,IARF,CADK,gBAYL,6BAAC,8BAAD,CAAU,IAAV;AACE,IAAA,GAAG,EAAC,UADN;AAEE,IAAA,GAAG,EAAEb,YAFP;AAGE,IAAA,aAAa,EAAEC,aAHjB;AAIE,IAAA,KAAK,EAAEY;AAJT,IAZF;AAmBD,CAvHD;;AAyHA,MAAMK,mBAAmB,gBAAG,iBAAKjC,4BAAL,EAAmCkC,eAAnC,CAA5B;eAEeD,mB","sourcesContent":["import React, { memo, useMemo, useRef } from 'react';\nimport { TouchableWithoutFeedback } from 'react-native';\nimport Animated, {\n  and,\n  block,\n  call,\n  cond,\n  eq,\n  Extrapolate,\n  neq,\n  not,\n  set,\n  useCode,\n} from 'react-native-reanimated';\nimport isEqual from 'lodash.isequal';\nimport { useReactiveValue } from '../../hooks';\nimport {\n  DEFAULT_OPACITY,\n  DEFAULT_APPEARS_ON_INDEX,\n  DEFAULT_DISAPPEARS_ON_INDEX,\n  DEFAULT_ENABLE_TOUCH_THROUGH,\n} from './constants';\nimport { WINDOW_HEIGHT } from '../../constants';\nimport { usePressBehavior } from './usePressBehavior';\nimport { styles } from './styles';\nimport type { BottomSheetDefaultBackdropProps } from './types';\n\nconst {\n  interpolate: interpolateV1,\n  interpolateNode: interpolateV2,\n} = require('react-native-reanimated');\nconst interpolate = interpolateV2 || interpolateV1;\n\nconst AnimatedTouchableWithoutFeedback = Animated.createAnimatedComponent(\n  TouchableWithoutFeedback\n);\n\nconst BottomSheetBackdropComponent = ({\n  animatedIndex,\n  opacity = DEFAULT_OPACITY,\n  appearsOnIndex = DEFAULT_APPEARS_ON_INDEX,\n  disappearsOnIndex = DEFAULT_DISAPPEARS_ON_INDEX,\n  enableTouchThrough = DEFAULT_ENABLE_TOUCH_THROUGH,\n  pressBehavior,\n  closeOnPress,\n  style,\n}: BottomSheetDefaultBackdropProps) => {\n  //#region hooks\n  const { handleOnPress, syntheticPressBehavior } = usePressBehavior({\n    pressBehavior,\n    closeOnPress,\n    disappearsOnIndex,\n  });\n  //#endregion\n\n  //#region variables\n  const containerRef = useRef<Animated.View>(null);\n  const pointerEvents = useMemo(() => (enableTouchThrough ? 'none' : 'auto'), [\n    enableTouchThrough,\n  ]);\n  //#endregion\n\n  //#region animation variables\n  const isTouchable = useReactiveValue(\n    syntheticPressBehavior !== 'none' ? 1 : 0\n  );\n  const animatedOpacity = useMemo(\n    () =>\n      interpolate(animatedIndex, {\n        inputRange: [disappearsOnIndex, appearsOnIndex],\n        outputRange: [0, opacity],\n        extrapolate: Extrapolate.CLAMP,\n      }),\n    [animatedIndex, opacity, appearsOnIndex, disappearsOnIndex]\n  );\n  //#endregion\n\n  //#region styles\n  const buttonStyle = useMemo(\n    () => [\n      style,\n      {\n        transform: [\n          {\n            translateY: cond(\n              eq(animatedIndex, disappearsOnIndex),\n              WINDOW_HEIGHT,\n              0\n            ),\n          },\n        ],\n      },\n    ],\n    [disappearsOnIndex, style, animatedIndex]\n  );\n  const containerStyle = useMemo(\n    () => [\n      styles.container,\n      style,\n      {\n        opacity: animatedOpacity,\n      },\n    ],\n    [style, animatedOpacity]\n  );\n  //#endregion\n\n  //#region effects\n  useCode(\n    () =>\n      block([\n        cond(\n          and(eq(animatedIndex, disappearsOnIndex), isTouchable),\n          [\n            set(isTouchable, 0),\n            call([], () => {\n              // @ts-ignore\n              containerRef.current.setNativeProps({\n                pointerEvents: 'none',\n              });\n            }),\n          ],\n          cond(and(neq(animatedIndex, disappearsOnIndex), not(isTouchable)), [\n            set(isTouchable, 1),\n            call([], () => {\n              // @ts-ignore\n              containerRef.current.setNativeProps({\n                pointerEvents: 'auto',\n              });\n            }),\n          ])\n        ),\n      ]),\n    []\n  );\n  //#endregion\n\n  return syntheticPressBehavior !== 'none' ? (\n    <AnimatedTouchableWithoutFeedback\n      accessible={true}\n      accessibilityRole=\"button\"\n      accessibilityLabel=\"Bottom Sheet backdrop\"\n      accessibilityHint=\"Tap to close the Bottom Sheet\"\n      onPress={handleOnPress}\n      style={buttonStyle}\n    >\n      <Animated.View key=\"backdrop\" ref={containerRef} style={containerStyle} />\n    </AnimatedTouchableWithoutFeedback>\n  ) : (\n    <Animated.View\n      key=\"backdrop\"\n      ref={containerRef}\n      pointerEvents={pointerEvents}\n      style={containerStyle}\n    />\n  );\n};\n\nconst BottomSheetBackdrop = memo(BottomSheetBackdropComponent, isEqual);\n\nexport default BottomSheetBackdrop;\n"]}