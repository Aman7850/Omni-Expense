{"version":3,"sources":["reducer.ts"],"names":["registerHost","draft","hostName","deregisterHost","addPortal","portalName","node","index","findIndex","item","name","push","updatePortal","component","reducer","method","params","removePortal","splice","action","type","ACTIONS","REGISTER_HOST","DEREGISTER_HOST","ADD_PORTAL","UPDATE_PORTAL","REMOVE_PORTAL"],"mappings":"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","sourcesContent":["import produce, { enableES5, setAutoFreeze } from 'immer';\nimport { ACTIONS } from './constants';\nimport { print } from '../utilities/logger';\nimport type { PortalType } from '../types';\nimport type { ActionTypes, AddPortalAction } from './types';\n\nenableES5();\nsetAutoFreeze(false);\n\nconst registerHost = (\n  draft: Record<string, Array<PortalType>>,\n  hostName: string\n) => {\n  if (!(hostName in draft)) {\n    draft[hostName] = [];\n  }\n};\n\nconst deregisterHost = (\n  draft: Record<string, Array<PortalType>>,\n  hostName: string\n) => {\n  delete draft[hostName];\n};\n\nconst addPortal = (\n  draft: Record<string, Array<PortalType>>,\n  hostName: string,\n  portalName: string,\n  node: any\n) => {\n  if (!(hostName in draft)) {\n    registerHost(draft, hostName);\n  }\n\n  /**\n   * updated portal, if it was already added.\n   */\n  const index = draft[hostName].findIndex(item => item.name === portalName);\n  if (index !== -1) {\n    draft[hostName][index].node = node;\n  } else {\n    draft[hostName].push({\n      name: portalName,\n      node,\n    });\n  }\n};\n\nconst updatePortal = (\n  draft: Record<string, Array<PortalType>>,\n  hostName: string,\n  portalName: string,\n  node: any\n) => {\n  if (!(hostName in draft)) {\n    print({\n      component: reducer.name,\n      method: updatePortal.name,\n      params: `Failed to update portal '${portalName}', '${hostName}' was not registered!`,\n    });\n    return;\n  }\n\n  const index = draft[hostName].findIndex(item => item.name === portalName);\n  if (index !== -1) {\n    draft[hostName][index].node = node;\n  }\n};\n\nconst removePortal = (\n  draft: Record<string, Array<PortalType>>,\n  hostName: string,\n  portalName: string\n) => {\n  if (!(hostName in draft)) {\n    print({\n      component: reducer.name,\n      method: removePortal.name,\n      params: `Failed to remove portal '${portalName}', '${hostName}' was not registered!`,\n    });\n    return;\n  }\n\n  const index = draft[hostName].findIndex(item => item.name === portalName);\n  if (index !== -1) draft[hostName].splice(index, 1);\n};\n\nexport const reducer = produce(\n  (draft: Record<string, Array<PortalType>>, action: ActionTypes) => {\n    const { type } = action;\n    switch (type) {\n      case ACTIONS.REGISTER_HOST:\n        registerHost(draft, action.hostName);\n        break;\n\n      case ACTIONS.DEREGISTER_HOST:\n        deregisterHost(draft, action.hostName);\n        break;\n\n      case ACTIONS.ADD_PORTAL:\n        addPortal(\n          draft,\n          action.hostName,\n          (action as AddPortalAction).portalName,\n          (action as AddPortalAction).node\n        );\n        break;\n\n      case ACTIONS.UPDATE_PORTAL:\n        updatePortal(\n          draft,\n          action.hostName,\n          (action as AddPortalAction).portalName,\n          (action as AddPortalAction).node\n        );\n        break;\n\n      case ACTIONS.REMOVE_PORTAL:\n        removePortal(\n          draft,\n          action.hostName,\n          (action as AddPortalAction).portalName\n        );\n        break;\n    }\n  }\n);\n"]}